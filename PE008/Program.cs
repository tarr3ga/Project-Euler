using System;

namespace PE008
{
    class Program
    {
        static void Main(string[] args)
        {
            GetProduct g = new GetProduct();
            g.Get();

            Console.Read();
        }
    }

    class GetProduct
    {
        const string number = "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478" +
                                  "8518438586156078911294949545950173795833195285320880551112540698747158523863050715693290963295" +
                                  "2274430435576689664895044524452316173185640309871112172238311362229893423380308135336276614282" +
                                  "8064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792" +
                                  "2749219016997208880937766572733300105336788122023542180975125454059475224352584907711670556013" +
                                  "6048395864467063244157221553975369781797784617406495514929086256932197846862248283972241375657" +
                                  "0560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171" +
                                  "4799244429282308634656748139191231628245861786645835912456652947654568284891288314260769004224" +
                                  "2190226710556263211111093705442175069416589604080719840385096245544436298123098787992724428490" +
                                  "9188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005" +
                                  "593572972571636269561882670428252483600823257530420752963450";

        long product = 0;

        
        char[] charArray = number.ToCharArray();

        public void Get()
        {
            for (int i = 0; i < charArray.Length - 13; i++)
            { 
                Extensions e = new Extensions();
                char[] chunk = e.Slice<char>(charArray, i, 13);

                long temp = 1;

                foreach(char c in chunk)
                {
                    temp *= (int)Char.GetNumericValue(c);
                }

                if (temp > product)
                {
                    product = temp;
                }
            }

            Console.WriteLine(product);
        }
    }

    class Extensions
    {
        public T[] Slice<T>(T[] source, int start, int range)
        {
            T[] result = new T[range];

            for(int i = 0; i < range; i++)
            {
                result[i] = source[i + start];
            }

            return result;
        }
    }
}
